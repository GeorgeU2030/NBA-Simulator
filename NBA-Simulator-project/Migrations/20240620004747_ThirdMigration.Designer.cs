// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBA_Simulator_project.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NBA_Simulator_project.Migrations
{
    [DbContext(typeof(NbaDb))]
    [Migration("20240620004747_ThirdMigration")]
    partial class ThirdMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NBA_Simulator_project.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MatchId"));

                    b.Property<int>("HomeScore")
                        .HasColumnType("integer");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("integer");

                    b.Property<int>("SeasonId")
                        .HasColumnType("integer");

                    b.Property<int>("VisitorScore")
                        .HasColumnType("integer");

                    b.Property<int>("VisitorTeamId")
                        .HasColumnType("integer");

                    b.HasKey("MatchId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("VisitorTeamId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("NBA_Simulator_project.Models.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SeasonId"));

                    b.Property<int?>("ChampionEastId")
                        .HasColumnType("integer");

                    b.Property<int?>("ChampionId")
                        .HasColumnType("integer");

                    b.Property<int?>("ChampionWestId")
                        .HasColumnType("integer");

                    b.Property<int>("Edition")
                        .HasColumnType("integer");

                    b.Property<int?>("SemiFinalistEastId")
                        .HasColumnType("integer");

                    b.Property<int?>("SemiFinalistWestId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubChampionId")
                        .HasColumnType("integer");

                    b.HasKey("SeasonId");

                    b.HasIndex("ChampionEastId");

                    b.HasIndex("ChampionId");

                    b.HasIndex("ChampionWestId");

                    b.HasIndex("SemiFinalistEastId");

                    b.HasIndex("SemiFinalistWestId");

                    b.HasIndex("SubChampionId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("NBA_Simulator_project.Models.SeasonTeam", b =>
                {
                    b.Property<int>("SeasonTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SeasonTeamId"));

                    b.Property<string>("Conference")
                        .HasColumnType("text");

                    b.Property<string>("Division")
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Losses")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Percentage")
                        .HasColumnType("double precision");

                    b.Property<int>("SeasonId")
                        .HasColumnType("integer");

                    b.Property<int>("Wins")
                        .HasColumnType("integer");

                    b.HasKey("SeasonTeamId");

                    b.HasIndex("SeasonId");

                    b.ToTable("SeasonTeams");
                });

            modelBuilder.Entity("NBA_Simulator_project.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Conference")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rings")
                        .HasColumnType("integer");

                    b.Property<int>("TitlesConference")
                        .HasColumnType("integer");

                    b.Property<int>("TitlesDivision")
                        .HasColumnType("integer");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("NBA_Simulator_project.Models.Match", b =>
                {
                    b.HasOne("NBA_Simulator_project.Models.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBA_Simulator_project.Models.Season", "Season")
                        .WithMany("Matches")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBA_Simulator_project.Models.Team", "VisitorTeam")
                        .WithMany()
                        .HasForeignKey("VisitorTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HomeTeam");

                    b.Navigation("Season");

                    b.Navigation("VisitorTeam");
                });

            modelBuilder.Entity("NBA_Simulator_project.Models.Season", b =>
                {
                    b.HasOne("NBA_Simulator_project.Models.Team", "ChampionEast")
                        .WithMany()
                        .HasForeignKey("ChampionEastId");

                    b.HasOne("NBA_Simulator_project.Models.Team", "Champion")
                        .WithMany()
                        .HasForeignKey("ChampionId");

                    b.HasOne("NBA_Simulator_project.Models.Team", "ChampionWest")
                        .WithMany()
                        .HasForeignKey("ChampionWestId");

                    b.HasOne("NBA_Simulator_project.Models.Team", "SemiFinalistEast")
                        .WithMany()
                        .HasForeignKey("SemiFinalistEastId");

                    b.HasOne("NBA_Simulator_project.Models.Team", "SemiFinalistWest")
                        .WithMany()
                        .HasForeignKey("SemiFinalistWestId");

                    b.HasOne("NBA_Simulator_project.Models.Team", "SubChampion")
                        .WithMany()
                        .HasForeignKey("SubChampionId");

                    b.Navigation("Champion");

                    b.Navigation("ChampionEast");

                    b.Navigation("ChampionWest");

                    b.Navigation("SemiFinalistEast");

                    b.Navigation("SemiFinalistWest");

                    b.Navigation("SubChampion");
                });

            modelBuilder.Entity("NBA_Simulator_project.Models.SeasonTeam", b =>
                {
                    b.HasOne("NBA_Simulator_project.Models.Season", "Season")
                        .WithMany("Teams")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("NBA_Simulator_project.Models.Season", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
